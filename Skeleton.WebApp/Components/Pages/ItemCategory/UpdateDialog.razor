@using Skeleton.Application.Services
@using Skeleton.Application.Services.ItemCategory
@using Skeleton.WebApp.Common
@using Skeleton.WebApp.Extensions
@inherits Skeleton.WebApp.Common.MyComponentBase

@inject ISnackbar Snackbar
@inject IServiceHandler<GetItemCategoryRequest, ItemCategoryDto> GetItemCategoryService
@inject IServiceHandler<UpdateItemCategoryRequest> UpdateItemCategoryService

<MyDialog MudDialog="MudDialog" OnUpdateClick="SubmitAsync">
    @if (_requestModel == null)
    {
        <NotFoundComponent Key="Category"/>
    }
    else
    {
        <MyForm Model="_requestModel" @ref="_form" Validation="_validator.ValidateValue">
            <MudTextField Label="Name" Variant="MyStyle.TextFieldVariant" @bind-Value="_requestModel.Name"
                          For="@(() => _requestModel.Name)"/>
            <MudTextField Label="Description" Variant="MyStyle.TextFieldVariant"
                          @bind-Value="_requestModel.Description"
                          For="@(() => _requestModel.Description)"/>
        </MyForm>
    }
</MyDialog>

@code {
    [CascadingParameter] private IMudDialogInstance? MudDialog { get; set; }
    [Parameter] public int Id { get; set; }

    private UpdateItemCategoryRequest? _requestModel;
    private readonly UpdateItemCategoryRequestValidator _validator = new();
    private MyForm? _form;

    protected override Task OnInitializedAsync()
    {
        var response = GetItemCategoryService?.Handle(new GetItemCategoryRequest { Id = Id });

        _requestModel = new UpdateItemCategoryRequest
        {
            Id = response!.Data!.Id,
            Name = response.Data.Name,
            Description = response.Data.Description
        };

        return base.OnInitializedAsync();
    }

    private async Task SubmitAsync()
    {
        var formInstance = _form?.GetForm();
        if (formInstance == null)
            return;

        await formInstance.Validate();

        if (formInstance.IsValid)
        {
            var response = UpdateItemCategoryService.Handle(_requestModel!);
            if (!response.Succeeded)
            {
                Snackbar?.AddFailed(response.Message);
                return;
            }

            Snackbar?.AddUpdated(response.Message);
            MudDialog?.Close(DialogResult.Ok(response.Succeeded));
        }
    }
}