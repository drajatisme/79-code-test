@using Skeleton.Application.Services
@using Skeleton.Application.Services.ItemCategory
@using Skeleton.WebApp.Common
@using Skeleton.WebApp.Extensions
@inherits Skeleton.WebApp.Common.MyComponentBase

@inject ISnackbar Snackbar
@inject IServiceHandler<CreateItemCategoryRequest> CreateItemCategoryService

<MyDialog MudDialog="MudDialog" OnSaveClick="@(async () => await SubmitAsync())">
    <MyForm Model="_requestModel" @ref="_form" Validation="_validator?.ValidateValue">
        <MudTextField Label="Name" Variant="MyStyle.TextFieldVariant" @bind-Value="_requestModel.Name"
                      For="@(() => _requestModel.Name)"
        />
        <MudTextField Label="Description" Variant="MyStyle.TextFieldVariant" @bind-Value="_requestModel.Description"
                      For="@(() => _requestModel.Description)"
        />
    </MyForm>
</MyDialog>

@code {
    [CascadingParameter] private IMudDialogInstance? MudDialog { get; set; }

    private readonly CreateItemCategoryRequest _requestModel = new();
    private readonly CreateItemCategoryRequestValidator? _validator = new();
    private MyForm? _form;

    private async Task SubmitAsync()
    {
        var formInstance = _form?.GetForm();
        if (formInstance == null)
            return;

        await formInstance.Validate();

        if (formInstance.IsValid)
        {
            var response = CreateItemCategoryService.Handle(_requestModel!);
            if (!response.Succeeded)
            {
                Snackbar.AddFailed(response.Message); 
                return;
            }

            Snackbar.AddCreated(response.Message);
            MudDialog?.Close(DialogResult.Ok(response.Succeeded));
        }
    }
}