@using System.Linq.Expressions
@using Skeleton.WebApp.Common
@typeparam T

<MudAutocomplete T="T" Label="@Label"
                 Value="Value"
                 ValueChanged="ValueChanged"
                 Variant="MyStyle.SelectVariant"
                 SearchFunc="SearchFunc"
                 For="@For"
                 ToStringFunc="ToStringFunc">
    <NoItemsTemplate>
        No Items Found
    </NoItemsTemplate>
</MudAutocomplete>

@code{
    [Parameter] public string Label { get; set; } = "Select Item";
    [Parameter] public T? Value { get; set; }
    [Parameter] public EventCallback<T> ValueChanged { get; set; }
    [Parameter] public Func<string?,CancellationToken,Task<IEnumerable<T>>?>? SearchFunc { get; set; }
    [Parameter] public  Expression<Func<T>>? For { get; set; }
    [Parameter] public  Func<T?,string?>? ToStringFunc { get; set; }
}